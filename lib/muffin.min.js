var exec=require("child_process").exec,fs=require("fs-extra"),path=require("path"),util=require("util"),wrench=require("wrench"),muffin={dir:{},file:{}};muffin.directories=function(a){var a=a||{},b=a.path||muffin.path.called;return{articles:b+"/articles",authors:b+"/authors",blog:b+"/public/blog","public":b+"/public",templates:b+"/templates"}},muffin.files=function(a){var a=a||{},b=a.path||muffin.path.called;return{authors:b+"/authors/default.json","package":b+"/package.json"}},muffin.bake=function(a){var b=this,c=muffin.path.markx+" ";a.template&&(c=c+"--template "+muffin.path.called+a.template+" ");if(!a.input)throw new Error;c=c+muffin.path.called+a.input+" > ";if(!a.output)throw new Error;c=c+muffin.path.called+a.output,exec(c,function(a,b,c){a!==null&&console.log("exec error: "+a)})},muffin.burn=function(a){var b=this,a=a||{},c=a.path||muffin.path.called,d=new muffin.directories({path:c});[d.articles,d.authors,d.blog,d.public,d.templates].forEach(function(a){wrench.rmdirSyncRecursive(a,!0)});var e=new muffin.files({path:c}),f=path.existsSync(e.package);f&&fs.unlink(e.package)},muffin.prepare=function(a){var b=this,a=a||{},c=a.path||muffin.path.called;muffin.burn({path:c});var d=new muffin.directories({path:c});[d.articles,d.authors,d.public,d.blog,d.templates].forEach(function(a){fs.mkdirSync(a)});var e=new muffin.files({path:c});fs.copyFile(muffin.path.lib+"/default.json",e.authors,function(a){if(!!a)throw a;fs.copyFile(muffin.path.lib+"/package.json",e.package,function(a){if(a)throw a})})},module.exports=function(a){return muffin.path=a,muffin};var getFilesByExt=function(a,b){if(!a.path)throw new Error;fs.readdir(a.path,function(c,d){a.ext&&(d=d.filter(function(b){var c=a.ext.length;return parseInt(c),c*=-1,b.substr(c)==a.ext})),typeof b=="function"&&b(d)})}